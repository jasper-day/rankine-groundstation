from numpy import ndarray
from numpy import float64
from typing import TypeAlias, List

Vec2: TypeAlias = ndarray[(2,), float64]

class Segment:
    def path_coords(self, point: Vec2) -> Vec2: ...
    def length(self) -> float64: ...
    def start(self) -> Vec2: ...
    def end(self) -> Vec2: ...
    def heading_start(self) -> float64: ...
    def heading_end(self) -> float64: ...
    def eval(self, arclength: float64): ...

class LineSegment(Segment):
    def __init__(self, start: Vec2, end: Vec2): ...

class CircularSegment(Segment):
    def __init__(self, center: Vec2, radius: float64, dir: float64, heading: float64, arclength: float64): ...

class DubinsPath:
    def __init__(self, segments: List[Segment]): ...
    def add_segment(self, segment: Segment): ...
    def num_segments(self) -> int: ...
    def get_segment(self, index: int) -> Segment: ... 
